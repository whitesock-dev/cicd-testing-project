name: Initialise Repo
on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  matrix_file_exist:
    name: Check matrix file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: get_state
        run: |
          echo "state=${{ hashFiles('.github/config/platform-matrix.json') }}" >> $GITHUB_OUTPUT
      - id: get_matrix
        if:  ${{ steps.get_state.outputs.state != '' }} 
        run: |
          echo "$(cat .github/config/platform-matrix.json)"
          echo "matrix=$(cat .github/config/platform-matrix.json)" >> $GITHUB_OUTPUT
    outputs:
      state: ${{ steps.get_state.outputs.state }}
      matrix: ${{ steps.get_matrix.outputs.matrix }}

  build-project:
    name: Build project
    needs: matrix_file_exist
    runs-on: ubuntu-latest
    if: >-
      ${{ !github.event.repository.is_template
          && needs.matrix_file_exist.outputs.state != '' }}
    outputs:
      buildVersion: ${{ steps.buildStep.outputs.buildVersion }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: List LFS files
        run: |
          echo ${{needs.matrix_file_exist.outputs.matrix}}
          git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore cache for LFS
        uses: actions/cache@v3
        id: cache-lfs
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }} 
      - name: Pull LFS
        run: |
            git lfs pull
            git add .
            git reset --hard
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: ./TestingProject_Unity/Library
          key: Library-TestingProject-StandaloneWindows64
          restore-keys: |
            Library-TestingProject-
            Library-
      - name: Builder
        id: build-step
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          # StandaloneWindows64, WebGL or check the table at the bottom of https://docs.unity3d.com/ScriptReference/BuildTarget.html
          targetPlatform: StandaloneWindows64
          projectPath: ./TestingProject_Unity
          buildProfile: 'Assets/Settings/BuildProfiles/WindowsBuild.asset'
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: Build
          path: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}